body {
  padding: 0;
  text-align: center;
  margin: 0;
}

#game-intro {
  padding: 40px 0px;
  overflow: hidden;
}


#game-container {
  display: flex;
  gap: 50px;
  width: 100vw;
  padding: 40px 0px;
  justify-content: center;
  overflow: hidden;
}

#game-screen {
  display: none;
  align-content: center;
  overflow: hidden; /* avoid overflowing from existing screen, i.e. not create scrollbar on game screen   */
  position: relative;
  background-image: url(../images/background-img.jpg);
  background-size: cover;
  border-radius: 20px
}

.star {
  background: gold;
  width: 50px;
  height: 30px;
  position: absolute; /* manipulate position of ball with reference to the game screen, absolute positions ball  relative to closest ancestor, on game-scareen put position property as relative. Absolute positiong not recommended for responsiveness though since it can cause overlaping on other elements   */
  background-image: url(../images/star.jfif);
  background-size: cover;
  top: 0; /* can draw movement of the ball by manipulating positions based on user click event */
  left: 0;
  border-radius: 50%;
}


#basket {
  background: red;
  width: 100px;
  height: 50px;
  position: absolute; /* move w.r.t to game screen */
  top: 750px; /* screen height - basket height */
  left: 150px; /* screen width/2 - paddle width/2 */ /*create variable for it in JS so that we can manipulate it */
  background-image: url(../images/basket.jfif);
  background-size: cover;
  border-radius: 10px;
  margin-left: 2px;
}


#game-end {
  display: none;
}

.game-intro p {
  font-size: 18px;
  font-family: "Verdana";
}

.logo-img {
  width: 350px;
  border-radius: 35%;
  /*animation: toDO add blinking image*/
}


body button {
  font-size: 30px;
  background-color: #870007;
  color: #fff;
  padding: 20px 40px;
  border: 0;
  box-shadow: 0;
  border-radius: 200px;
  margin-bottom: 20px;
}


